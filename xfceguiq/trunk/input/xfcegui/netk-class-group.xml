<refentry id="libxfcegui4-NetkClassGroup">
<refmeta>
<refentrytitle>NetkClassGroup</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBXFCEGUI4 Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>NetkClassGroup</refname><refpurpose>Class Group</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>

#include &lt;libxfcegui4/libxfcegui4.h&gt;


struct      <link linkend="NetkClassGroup">NetkClassGroup</link>;
<link linkend="GType">GType</link>       <link linkend="netk-class-group-get-type">netk_class_group_get_type</link>       (void);
<link linkend="NetkClassGroup">NetkClassGroup</link>* <link linkend="netk-class-group-get">netk_class_group_get</link>        (const char *res_class);
<link linkend="GList">GList</link>*      <link linkend="netk-class-group-get-windows">netk_class_group_get_windows</link>    (<link linkend="NetkClassGroup">NetkClassGroup</link> *class_group);
const char* <link linkend="netk-class-group-get-res-class">netk_class_group_get_res_class</link>  (<link linkend="NetkClassGroup">NetkClassGroup</link> *class_group);
const char* <link linkend="netk-class-group-get-name">netk_class_group_get_name</link>       (<link linkend="NetkClassGroup">NetkClassGroup</link> *class_group);
<link linkend="GdkPixbuf">GdkPixbuf</link>*  <link linkend="netk-class-group-get-icon">netk_class_group_get_icon</link>       (<link linkend="NetkClassGroup">NetkClassGroup</link> *class_group);
<link linkend="GdkPixbuf">GdkPixbuf</link>*  <link linkend="netk-class-group-get-mini-icon">netk_class_group_get_mini_icon</link>  (<link linkend="NetkClassGroup">NetkClassGroup</link> *class_group);

</synopsis>
</refsynopsisdiv>







<refsect1>
<title>Description</title>
<para>
A <link linkend="NetkClassGroup">NetkClassGroup</link> represents XXX
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="NetkClassGroup"/>struct NetkClassGroup</title>
<programlisting>struct NetkClassGroup {

    GObject parent_instance;

    NetkClassGroupPrivate *priv;
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="netk-class-group-get-type"/>netk_class_group_get_type ()</title>
<programlisting><link linkend="GType">GType</link>       netk_class_group_get_type       (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the gtype of <link linkend="NetkClassGroup">NetkClassGroup</link>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="netk-class-group-get"/>netk_class_group_get ()</title>
<programlisting><link linkend="NetkClassGroup">NetkClassGroup</link>* netk_class_group_get        (const char *res_class);</programlisting>
<para>
Gets an existing class group based on its resource class name.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>res_class</parameter>&nbsp;:</term>
<listitem><simpara> Name of the sought resource class.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> An existing <link linkend="NetkClassGroup">NetkClassGroup</link>, or NULL if there is no groups with
the specified <parameter>res_class</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="netk-class-group-get-windows"/>netk_class_group_get_windows ()</title>
<programlisting><link linkend="GList">GList</link>*      netk_class_group_get_windows    (<link linkend="NetkClassGroup">NetkClassGroup</link> *class_group);</programlisting>
<para>
Gets the list of windows that are grouped in a <parameter>class_group</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>class_group</parameter>&nbsp;:</term>
<listitem><simpara> A window class group.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A list of windows, or NULL if the group contains no windows.
The list should not be freed, as it belongs to the <parameter>class_group</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="netk-class-group-get-res-class"/>netk_class_group_get_res_class ()</title>
<programlisting>const char* netk_class_group_get_res_class  (<link linkend="NetkClassGroup">NetkClassGroup</link> *class_group);</programlisting>
<para>
Queries the resource class name for a class group.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>class_group</parameter>&nbsp;:</term>
<listitem><simpara> A window class group.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The resource class name of the specified <parameter>class_group</parameter>, or the
empty string if the group has no name.  The string should not be freed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="netk-class-group-get-name"/>netk_class_group_get_name ()</title>
<programlisting>const char* netk_class_group_get_name       (<link linkend="NetkClassGroup">NetkClassGroup</link> *class_group);</programlisting>
<para>
Queries the human-readable name for a class group.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>class_group</parameter>&nbsp;:</term>
<listitem><simpara> A window class group.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> Name of the class group.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="netk-class-group-get-icon"/>netk_class_group_get_icon ()</title>
<programlisting><link linkend="GdkPixbuf">GdkPixbuf</link>*  netk_class_group_get_icon       (<link linkend="NetkClassGroup">NetkClassGroup</link> *class_group);</programlisting>
<para>
Queries the icon to be used for a class group.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>class_group</parameter>&nbsp;:</term>
<listitem><simpara> A window class group.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The icon to use.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="netk-class-group-get-mini-icon"/>netk_class_group_get_mini_icon ()</title>
<programlisting><link linkend="GdkPixbuf">GdkPixbuf</link>*  netk_class_group_get_mini_icon  (<link linkend="NetkClassGroup">NetkClassGroup</link> *class_group);</programlisting>
<para>
Queries the mini-icon to be used for a class group.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>class_group</parameter>&nbsp;:</term>
<listitem><simpara> A window class group.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The mini-icon to use.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
